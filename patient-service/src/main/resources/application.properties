spring.application.name=patient-service
server.port=0
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/v3/api-docs

management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# PostgreSQL connection settings
spring.datasource.url=jdbc:postgresql://ep-yellow-tree-a1sz3urs-pooler.ap-southeast-1.aws.neon.tech/patient_service?sslmode\=require
spring.datasource.username=staff_service_owner
spring.datasource.password=npg_3uADglTrbEt6
spring.datasource.driver-class-name=org.postgresql.Driver

spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# JPA/Hibernate settings
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

jwt.secret_key=bXktdmVyeS1sb25nLWFuZC1zZWN1cmUtc2VjcmV0LWtleS13aGljaC1pcy1hdC1sZWFzdC0zMi1ieXRlcw==
jwt.expirationtime=86400

# OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://auth-server:8080
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://auth-server:8080/.well-known/jwks.json